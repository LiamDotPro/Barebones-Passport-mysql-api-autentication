{"version":3,"sources":["../../lib/adminFunctions.js"],"names":["administration","limit","using","connection","query","then","res","list","forEach","el","i","push","name","userName","length","formattedList","username","index","msg","users","size"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;;;;;IAEqBA,c;AAEjB,8BAAc;AAAA;AAEb;;AAED;;;;;oCACYC,K,EAAO;AACf,mBAAO,mBAAQC,KAAR,CAAc,mBAAd,EAAkC,UAACC,UAAD,EAAgB;AACrD,uBAAOA,WAAWC,KAAX,CAAiB,0CAAjB,EAA6DC,IAA7D,CAAkE,UAACC,GAAD,EAAS;AAC9E,wBAAIC,OAAO,EAAX;AACAD,wBAAIE,OAAJ,CAAY,UAACC,EAAD,EAAKC,CAAL,EAAW;AACnBH,6BAAKI,IAAL,CAAU,EAACC,MAAMH,GAAGG,IAAV,EAAgBC,UAAUJ,GAAGI,QAA7B,EAAV;AACH,qBAFD;AAGA,2BAAON,IAAP;AACH,iBANM,CAAP;AAOH,aARM,CAAP;AASH;;AAED;;;;;;;sCAIcK,I,EAAM;AAChB,mBAAO,mBAAQV,KAAR,CAAc,mBAAd,EAAkC,UAACC,UAAD,EAAgB;AACrD,uBAAOA,WAAWC,KAAX,CAAiB,uCAAjB,EAA0D,CAACQ,IAAD,CAA1D,EAAkEP,IAAlE,CAAuE,UAACC,GAAD,EAAS;AACnF,wBAAIA,IAAIQ,MAAJ,GAAa,CAAjB,EAAoB;AAChB,4BAAIC,gBAAgB,EAApB;;AAEAT,4BAAIE,OAAJ,CAAY,UAACC,EAAD,EAAKC,CAAL,EAAW;AACnBK,0CAAcJ,IAAd,CAAmB,EAACC,MAAMH,GAAGG,IAAV,EAAgBI,UAAUP,GAAGI,QAA7B,EAAuCI,OAAOP,CAA9C,EAAnB;AACH,yBAFD;;AAIA,+BAAO;AACHQ,iCAAK,SADF;AAEHC,mCAAOJ,aAFJ;AAGHK,kCAAML,cAAcD;AAHjB,yBAAP;AAKH;AAEJ,iBAfM,CAAP;AAgBH,aAjBM,CAAP;AAkBH;;;;;;kBA1CgBd,c","file":"adminFunctions.js","sourcesContent":["import getSqlConnection from '../lib/db';\r\nimport Promise from 'bluebird';\r\n\r\nexport default class administration {\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    // @todo Add in limitting alongside where to stop and start.\r\n    getUserList(limit) {\r\n        return Promise.using(getSqlConnection(), (connection) => {\r\n            return connection.query('SELECT * FROM `accounts` ORDER BY id ASC').then((res) => {\r\n                let list = [];\r\n                res.forEach((el, i) => {\r\n                    list.push({name: el.name, userName: el.userName})\r\n                });\r\n                return list;\r\n            })\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Gets a list of users with the given name associated to there account.\r\n     * @param name\r\n     */\r\n    getUserByName(name) {\r\n        return Promise.using(getSqlConnection(), (connection) => {\r\n            return connection.query('SELECT * FROM `accounts` WHERE name=?', [name]).then((res) => {\r\n                if (res.length > 0) {\r\n                    let formattedList = [];\r\n\r\n                    res.forEach((el, i) => {\r\n                        formattedList.push({name: el.name, username: el.userName, index: i});\r\n                    });\r\n\r\n                    return {\r\n                        msg: 'Success',\r\n                        users: formattedList,\r\n                        size: formattedList.length\r\n                    }\r\n                }\r\n\r\n            })\r\n        })\r\n    }\r\n\r\n}\r\n"]}